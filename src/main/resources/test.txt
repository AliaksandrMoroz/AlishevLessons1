1. примитивы- int,byte,long,char,double,boolean,short,float
   ссылочные- String
2. String, StringBuilder
    String string = "Hello";
    String string2="world";
    String string3= string+string2;
    sout(string3);
3. While;          do while;              fori;                     foreach;
while(true){       do{sout("+++")}        for(i=0;i<10;i++){        for(String[] string:
sout("+++")        while(false){          sout("+++");              el)
if(-//-){          sout("---"}
sout("--")
break;}
}
4.if(-//-){--///--}else if(--//--){-//-}else{-//-};
  switch(-//-)
  case 1:  break;
  case 2:  break;
  default: -//-;

5.Шаблоном или описанием объекта является класс,
 а объект представляет экземпляр этого класса.
  Можно еще провести следующую аналогию.
   У нас у всех есть некоторое представление о человеке -
    наличие двух рук, двух ног, головы, туловища и т.д.
     Есть некоторый шаблон - этот шаблон можно назвать классом.
      Реально же существующий человек (фактически экземпляр данного класса)
       является объектом этого класса.
class Person{
    String name;        // имя
    int age;            // возраст
    void displayInfo(){
        System.out.printf("Name: %s \tAge: %d\n", name, age);
    }
}

В языке Java подобную проблему частично позволяют решить интерфейсы.
 Интерфейсы определяют некоторый функционал, не имеющий конкретной реализации,
  который затем реализуют классы, применяющие эти интерфейсы.
   И один класс может применить множество интерфейсов.

   interface Printable{
       void print();
   }

   Кроме отдельных примитивных типов данных и классов в Java есть такой тип как enum или перечисление.
    Перечисления представляют набор логически связанных констант.
     Объявление перечисления происходит с помощью оператора enum,
      после которого идет название перечисления. Затем идет список элементов перечисления через запятую:


enum Day{
    MONDAY,TUESDAY, WEDNESDAY,THURSDAY, FRIDAY, SATURDAY, SUNDAY;
}
6.
Оператор break применяется для прерывания текущей итерации
switch(-//-)
  case 1:  break;
  case 2:  break;
  default: -//-;

Оператор continue — ключевое слово, которое может быть использовано в любой структуре цикла,
 и оно призывает цикл сразу же перейти к следующей итерации.
 int value=1;
        while (true){
            if(value==11){
                break;
            }
            System.out.print(value++ +" ");
        }
        System.out.println();
        for (int i = 0; i < value; i++) {
            if(i%2==0){
                continue;
            }
            System.out.print("i="+i+" ");
        }
    }

 7.Оператор switch — проверяет переменную на равенство в отношении списка значений.
 switch(-//-)
   case 1:  break;
   case 2:  break;
   default: -//-;

 8.Массивы в Java — это структура данных,
  которая хранит упорядоченные коллекции фиксированного размера элементов нужного типа.
 String [] strings = new String[4];
        strings[0]="Hello";
        strings[1]="java";
        strings[2]="world";
        strings[3]="!";

 9.В Java определен один специальный класс, называемый Object.
  Все остальные классы являются подклассами, производными от этого класса,
   даже если в объявлении это явно не указано.


 10.Метод в Java — это комплекс выражений, совокупность которых позволяет выполнить определенную операцию.

void speakLesson15(){
                for (int i = 0; i < 3; i++) {
                    System.out.println("My name is "+ name+ ", "+ "my age "+ age);
                }
 11.
 void(ничего не возвращает)----
 String(возвращает String)
 int(возвращает int)
 и т.д.
 speakLesson15(){
                 for (int i = 0; i < 3; i++) {
                     System.out.println("My name is "+ name+ ", "+ "my age "+ age);
                 }
 12.С помощью параметров мы можем передать в методы различные данные, которые будут использоваться для вычислений.
 speakLesson15(int x, int y){}

 13-14.Инкапсуляция — это одна из четырёх фундаментальных концепций ООП. Названия оставшихся трёх: наследование, полиморфизм, абстракция.
Наследование — это процесс перенимания классом свойств (методов и полей) другого класса.
Полиморфизм – способность объекта принимать множество различных форм. Наиболее распространенное использование полиморфизма в ООП происходит, когда ссылка на родительский класс используется для ссылки на объект дочернего класса.
public interface Vegetarian{}
public class Lesson_025_Nasledovanie.Animal{}
public class Deer extends Lesson_025_Nasledovanie.Animal implements Vegetarian{
Deer d = new Deer();
Lesson_025_Nasledovanie.Animal a = d;
Vegetarian v = d;
Object o = d;}
}
 15. Ключевое слово this — используется для ссылки на текущий класс с учетом метода или конструктора экземпляра.
  String name;
    int age;
 public void setNameLesson17(String name, int age) {
         this.name = name;
         this.age=age;
     }


